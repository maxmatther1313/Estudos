// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProjetoBanca;

namespace ProjetoBanca.Migrations
{
    [DbContext(typeof(ImplasticContext))]
    partial class EstoqueContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.1-rtm-30846")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ProjetoBanca.Models.Categoria", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descricao");

                    b.Property<string>("Nome");

                    b.HasKey("Id");

                    b.ToTable("Categorias");
                });

            modelBuilder.Entity("ProjetoBanca.Models.Contato", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Cpf");

                    b.Property<string>("Email");

                    b.Property<string>("Nome");

                    b.Property<string>("Telefone");

                    b.HasKey("Id");

                    b.ToTable("Contatos");
                });

            modelBuilder.Entity("ProjetoBanca.Models.Endereco", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CepId");

                    b.Property<int?>("CidadeId");

                    b.Property<string>("Complemento");

                    b.Property<string>("Estado");

                    b.Property<int>("NumeroCasa");

                    b.Property<string>("Pais");

                    b.Property<int?>("PessoaId");

                    b.Property<string>("TipoEndereco");

                    b.HasKey("Id");

                    b.HasIndex("CepId");

                    b.HasIndex("CidadeId");

                    b.HasIndex("PessoaId");

                    b.ToTable("Enderecos");
                });

            modelBuilder.Entity("ProjetoBanca.Models.Logradouro", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Bairro");

                    b.Property<string>("Cep");

                    b.Property<string>("Cidade");

                    b.Property<string>("Rua");

                    b.Property<string>("TipoLogradouro");

                    b.HasKey("Id");

                    b.ToTable("Logradouros");
                });

            modelBuilder.Entity("ProjetoBanca.Models.Pessoa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Cpf");

                    b.Property<string>("Nome");

                    b.HasKey("Id");

                    b.ToTable("Pessoas");
                });

            modelBuilder.Entity("ProjetoBanca.Models.Produto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descricao");

                    b.Property<string>("Nome");

                    b.Property<DateTime>("PrazoEntrega");

                    b.Property<int>("Quantidade");

                    b.Property<int?>("UnidadeMedidaId");

                    b.Property<double>("ValoraUnitario");

                    b.HasKey("Id");

                    b.HasIndex("UnidadeMedidaId");

                    b.ToTable("Produtos");
                });

            modelBuilder.Entity("ProjetoBanca.Models.UnidadeMedida", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descricao");

                    b.HasKey("Id");

                    b.ToTable("UnidadesDeMedida");
                });

            modelBuilder.Entity("ProjetoBanca.Models.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email");

                    b.Property<string>("Login");

                    b.Property<string>("Nome");

                    b.Property<string>("Senha");

                    b.HasKey("Id");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("ProjetoBanca.Models.Venda", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ClienteId");

                    b.Property<bool>("CobrarFrete");

                    b.Property<DateTime>("Data");

                    b.Property<DateTime>("DataEntrega");

                    b.Property<int>("Numero");

                    b.Property<int?>("OrdemDeCompraId");

                    b.Property<string>("Representante");

                    b.Property<int?>("SolicitanteId");

                    b.Property<double>("Valor");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.HasIndex("OrdemDeCompraId");

                    b.HasIndex("SolicitanteId");

                    b.ToTable("Vendas");
                });

            modelBuilder.Entity("ProjetoBanca.Models.Endereco", b =>
                {
                    b.HasOne("ProjetoBanca.Models.Logradouro", "Cep")
                        .WithMany()
                        .HasForeignKey("CepId");

                    b.HasOne("ProjetoBanca.Models.Logradouro", "Cidade")
                        .WithMany()
                        .HasForeignKey("CidadeId");

                    b.HasOne("ProjetoBanca.Models.Pessoa", "Pessoa")
                        .WithMany("Enderecos")
                        .HasForeignKey("PessoaId");
                });

            modelBuilder.Entity("ProjetoBanca.Models.Produto", b =>
                {
                    b.HasOne("ProjetoBanca.Models.UnidadeMedida", "UnidadeMedida")
                        .WithMany()
                        .HasForeignKey("UnidadeMedidaId");
                });

            modelBuilder.Entity("ProjetoBanca.Models.Venda", b =>
                {
                    b.HasOne("ProjetoBanca.Models.Pessoa", "Cliente")
                        .WithMany()
                        .HasForeignKey("ClienteId");

                    b.HasOne("ProjetoBanca.Models.Pessoa", "OrdemDeCompra")
                        .WithMany()
                        .HasForeignKey("OrdemDeCompraId");

                    b.HasOne("ProjetoBanca.Models.Contato", "Solicitante")
                        .WithMany()
                        .HasForeignKey("SolicitanteId");
                });
#pragma warning restore 612, 618
        }
    }
}
